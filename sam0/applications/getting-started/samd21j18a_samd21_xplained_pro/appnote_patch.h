/**
/**
 * \file
 *
 * \brief Getting Started with SAMD21 xplained pro 
 *
 * Copyright (C) 2014 Atmel Corporation. All rights reserved.
 *
 * \asf_license_start
 *
 * \page License
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. The name of Atmel may not be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * 4. This software may only be redistributed and used in connection with an
 *    Atmel microcontroller product.
 *
 * THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
 * EXPRESSLY AND SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * \asf_license_stop
 *
 */

/**
\defgroup BOARD_FEATURE board feature
The SAMD21 xplained pro  feature
- SAMD21j18a device LQFP64 package with optional socket footprint
- ARM Cortex-M0+ CPU running at up to 48MHz
- 256KB in-system self-programmable Flash
- 32KB SRAM
- A USB-to-COM port for debugging and a USB for target 
- Serial Flash memory
- LEDs, push buttons
- USART port with RS232 driver multiplexed with RS485 function with driver.
*/

/**
\defgroup DEV_TOOLS development tools
- Atmel Studio 6.2: http://www.atmel.com/atmelstudio 
  - For Atmel Studio 6.1,please install patch ATSAMD21-trunk-6.1.7.vsix
  (provided with the application note)
- IAR Embedded Workbench for ARM 6.70.1:
  http://www.iar.com/en/Products/IAR-Embedded-Workbench/ARM/
  - SAMD21 patch for IAR Embedded Workbench for eariler version of IAR:
    <i>ewarm add-on v0.1.1.zip</i> (provided with the application note)
- SAM-BA (v2.12 or above): http://www.atmel.com/tools/atmelsam-bain-systemprogrammer.aspx
  - SAMD21 patch for SAM-BA v2.12: <i>sam-ba_2.12_patchsamd21.exe</i>
    (provided with the application note)
- ASF (v3.15.0 or above): http://www.atmel.com/tools/avrsoftwareframework.aspx
*/

/**
\defgroup AS6_USAGE Studio usage
- Atmel Studio 6.1 (or above) installed
- Atmel Software Framework (ASF) v3.15.0 or above
- SAMD21 xplained pro board connected to Atmel Studio and powered on
*/

/**
\defgroup IAR_USAGE IAR usage
- ASF 3.15.0 or above standalone package installed
- IAR Embedded Workbench for ARM 6.70.1 installed
- SAMD21 xplained pro patch for IAR Embedded Workbench installed
- SAMD21 xplained pro board connected to IAR Embedded Workbench for ARM and
  powered on
*/

/**
\defgroup SAM-BA_REQ SAM-BA requirement
- Atmel Studio 6.1 (or above) installed
- ASF 3.15.0 or above standalone package installed
- SAM-BA v2.12 and SAMD21 patch for it installed
- SAMD21 xplained pro board connected to SAM-BA and powered on
*/

/**
\defgroup SAM-BA_LOAD SAM-BA load binary
- Open SAM-BA
- Select <i>COM1</i> (could be COM2, 3 or other number) as the
  connection
- Select <i>SAMD21 xplained pro</i> as the target board. Then press \a Connect
- In SAM-BA GUI, choose \a Flash tab
- For <i>Send File Name</i>, choose the binary file
  (i.e., <i>getting-started_flash.bin</i>) generated previously
- Specify the address (e.g., 0x01000000 if non-cached), then press
  <i>Send File</i>
- For Scripts, select <i>Boot from Flash (GPNVM1)</i>, then press \a Execute
*/

/**
\defgroup GS_SPEC getting-started example specification
The getting-started example makes LED0 on the board blink at two fixed rate 
This rates are generated by using a delay. The blinking will stop after about 
5 seconds 
*/

/**
\defgroup BUTTONS buttons on the board
The SAMD21 xplained pro features two  push-buttons,one is SW0 for debugging, connected to 
pins PA15,the other is used to reset the MCU. 

The Getting-started example uses SW0 buttons.When push down the button,the led0 will be on,
when release,the led0 will be off.
*/

/**
\defgroup LEDS LEDs on the board
There are three LEDs on the SAMD21 xplained pro. one is for POWER status,one is for program
status and one is for software debug(LED0)

In the getting-started example ,LED0 is used for debugging.
*/

/**
\defgroup COM COM port on the board
SERCOM3 of the SAMD21 is connected to the USB-to-COM port (UART) on the SAMD21 xplained pro.
*/

/**
\defgroup CONF_CLOCK about conf_clock.h
In the <i>conf_clocks.h</i>, the system clock source (\c CONF_CLOCK_CONFIGURE_GCLK)
and system clock prescaler (\c CONF_CLOCK_GCLK_0_PRESCALER) must be defined. In the case
of the getting-started example, since the Phase Lock Loop block (PLLB) is used
to multiply the frequency of the system clock, PLLB source, factor and divider
are defined.
*/

/**
\defgroup SYS_CLOCK system clock setting
As shown in the code above, the exteneral crystal oscillator
(\c SYSTEM_CLOCK_SOURCE_OSC8M) is selected as the system clock source
(\c CONF_CLOCK_GCLK_0_CLOCK_SOURCE).
*/


