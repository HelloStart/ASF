<asf xmlversion="1.0">
	<module type="driver" id="xmega.drivers.nvm" caption="NVM - Non Volatile Memory" basedir="./xmega/drivers/nvm" fromfile="./xmega/drivers/nvm/asf.xml">
		<info type="description" value="summary">
		Driver for the Non Volatile Memories (NVM).
		Provides functions for accessing the program memory, EEPROM, signature row, fuse bits and lock bits.
		</info>
		<build type="asm-source" value="xmega/drivers/nvm/nvm_asm.s"/>
		<build type="c-source" value="xmega/drivers/nvm/nvm.c"/>
		<build type="header-file" subtype="api" value="xmega/drivers/nvm/nvm.h"/>
		<build type="include-path" value="xmega/drivers/nvm"/>
		<build type="doxygen-entry-point" value="nvm_group"/>
		<build type="doxygen-quick-start" value="xmega_nvm_quickstart"/>
		<device-support value="xmegaa"/>
		<device-support value="xmegaau"/>
		<device-support value="xmegab"/>
		<device-support value="xmegad"/>
		<require idref="xmega.utils"/>
		<require idref="xmega.drivers.cpu"/>
		<generator value="doxygen-module" default-mcu="unspecified-xmegaa1"/>
	</module>
	<module type="application" id="xmega.drivers.nvm.example1" caption="NVM Example 1" basedir="./xmega/drivers/nvm/example1" fromfile="./xmega/drivers/nvm/example1/asf.xml">
		<info type="description" value="summary">
		Use the XMEGA NVM to read the device and the production signatures and output them on LEDs.
		</info>
		<info type="keyword" value="technology">
			<keyword value="Memory"/>
		</info>
		<build type="c-source" value="xmega/drivers/nvm/example1/example1_xmega.c"/>
		<build type="module-config" subtype="required-header-file" value="conf_example.h"/>
		<device-support value="xmegaa"/>
		<device-support value="xmegaau"/>
		<require idref="common.services.basic.clock"/>
		<require idref="common.services.basic.gpio"/>
		<require idref="xmega.drivers.nvm"/>
	</module>
	<project caption="Drivers NVM Example 1 for XMEGA-A1 Xplained" id="xmega.drivers.nvm.example1.xmega_a1_xplained" basedir="./xmega/drivers/nvm/example1/atxmega128a1_xplained" fromfile="./xmega/drivers/nvm/example1/atxmega128a1_xplained/asf.xml" type="normal">
		<build type="header-file" value="xmega/drivers/nvm/example1/atxmega128a1_xplained/conf_board.h"/>
		<build type="header-file" value="xmega/drivers/nvm/example1/atxmega128a1_xplained/conf_clock.h"/>
		<build type="header-file" value="xmega/drivers/nvm/example1/atxmega128a1_xplained/conf_example.h"/>
		<build type="include-path" value="xmega/drivers/nvm/example1/atxmega128a1_xplained"/>
		<require idref="xmega.drivers.nvm.example1"/>
		<require idref="board.xmega_a1_xplained"/>
		<board-addon vendor="Some Corp." caption="AwesomeAddon" position="J1"/>
		<config name="config.board.xmega_a1_xplained.led" value="no"/>
		<config name="config.board.xmega_a1_xplained.init" value="yes"/>
		<generator value="iarew"/>
		<generator value="avrgcc"/>
		<generator value="as5_8"/>
		<generator value="doxygen"/>
		<device-support value="atxmega128a1"/>
	</project>

		<module type="driver" id="xmega.utils" caption="XMEGA compiler driver" basedir="./xmega/utils" fromfile="./xmega/utils/asf.xml">
		<info type="gui-flag" value="hidden"/>
		<info type="description" value="summary">
		Compiler abstraction layer and code utilities for 8-bit AVR. This module provides various abstraction layers and utilities to make code compatible between different compilers. It also contains utilities typically used while pre-processing code.
		</info>
		<build type="include-path" value="xmega/utils"/>
		<build type="include-path" value="xmega/utils/preprocessor"/>
		<build type="header-file" value="xmega/utils/assembler.h"/>
		<build type="header-file" value="xmega/utils/assembler/gas.h" toolchain="avrgcc"/>
		<build type="header-file" value="xmega/utils/assembler/iar.h" toolchain="iarew"/>
		<build type="header-file" value="xmega/utils/bit_handling/clz_ctz.h"/>
		<build type="header-file" subtype="api" value="xmega/utils/compiler.h"/>
		<build type="header-file" subtype="api" value="xmega/utils/parts.h"/>
		<build type="header-file" subtype="api" value="xmega/utils/status_codes.h"/>
		<build type="header-file" value="xmega/utils/preprocessor/mrepeat.h"/>
		<build type="header-file" value="xmega/utils/preprocessor/preprocessor.h"/>
		<build type="header-file" value="xmega/utils/preprocessor/stringz.h"/>
		<build type="header-file" value="xmega/utils/preprocessor/tpaste.h"/>
		<build type="header-file" value="xmega/utils/progmem.h"/>
		<build type="doxygen-entry-point" value="group_xmega_utils"/>
		<device-support value="xmega"/>
	</module>

	<select-by-device id="common.services.basic.clock" caption="Clock Control" basedir="./common/services/clock" fromfile="./common/services/clock/asf.xml">
		<info type="description" value="summary">
		Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API for UC3 and XMEGA.
		</info>
		<info type="keyword" value="technology">
			<keyword value="Clocks"/>
		</info>
		<module type="service" id="common.services.basic.clock#0" caption="Clock Control - XMEGA A1/A3/A3B/A4/D implementation">
			<info type="description" value="summary">
			Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API for UC3 and XMEGA.
			</info>
			<info type="keyword" value="technology">
				<keyword value="Clocks"/>
			</info>
			<build type="header-file" value="common/services/clock/genclk.h"/>
			<build type="header-file" value="common/services/clock/osc.h"/>
			<build type="header-file" value="common/services/clock/pll.h"/>
			<build type="header-file" subtype="api" value="common/services/clock/sysclk.h"/>
			<build type="header-file" value="common/services/clock/xmega/osc.h"/>
			<build type="header-file" value="common/services/clock/xmega/pll.h"/>
			<build type="c-source" value="common/services/clock/xmega/sysclk1.c"/>
			<build type="header-file" value="common/services/clock/xmega/sysclk.h"/>
			<build type="include-path" value="common/services/clock"/>
			<build type="module-config" subtype="required-header-file" value="conf_clock.h"/>
			<build type="module-config" subtype="path" value="common/services/clock/xmega/module_config"/>
			<build type="doxygen-entry-point" value="clk_group"/>
			<device-support value="xmegaa1"/>
			<device-support value="xmegaa3"/>
			<device-support value="xmegaa4"/>
			<device-support value="xmegaa3b"/>
			<device-support value="xmegad"/>
			<require idref="xmega.drivers.cpu"/>
			<generator value="doxygen-module" default-mcu="unspecified-xmegaa1"/>
		</module>
		<module type="service" id="common.services.basic.clock#1" caption="Clock Control - XMEGA A1U/A3U/A3BU/A4U implementation">
			<info type="description" value="summary">
			Driver for clock control (sysclk). Provides functions for accessing, configuring, enabling and disabling clocks. Common API for UC3 and XMEGA.
			</info>
			<info type="keyword" value="technology">
				<keyword value="Clocks"/>
			</info>
			<build type="header-file" value="common/services/clock/genclk.h"/>
			<build type="header-file" value="common/services/clock/osc.h"/>
			<build type="header-file" value="common/services/clock/pll.h"/>
			<build type="header-file" subtype="api" value="common/services/clock/sysclk.h"/>
			<build type="header-file" value="common/services/clock/xmega/osc.h"/>
			<build type="header-file" value="common/services/clock/xmega/pll.h"/>
			<build type="c-source" value="common/services/clock/xmega/sysclk2.c"/>
			<build type="header-file" value="common/services/clock/xmega/sysclk.h"/>
			<build type="include-path" value="common/services/clock"/>
			<build type="module-config" subtype="required-header-file" value="conf_clock.h"/>
			<build type="module-config" subtype="path" value="common/services/clock/xmega/module_config"/>
			<build type="doxygen-entry-point" value="clk_group"/>
			<device-support value="xmegaa1u"/>
			<device-support value="xmegaa3u"/>
			<device-support value="xmegaa3bu"/>
			<device-support value="xmegaa4u"/>
			<device-support value="xmegab"/>
			<require idref="xmega.drivers.cpu"/>
			<generator value="doxygen-module" default-mcu="unspecified-xmegaa3u"/>
		</module>
	</select-by-device>

	<module type="service" id="common.services.basic.gpio" caption="GPIO - General purpose Input/Output" basedir="./common/services/gpio" fromfile="./common/services/gpio/asf.xml">
		<info type="description" value="summary">
			Driver for general purpose I/O pins. Provides functions for initializing IO pins as input or output, and for reading, or setting/clearing/toggling pins. Common API for UC3 and XMEGA.
			</info>
		<info type="keyword" value="technology">
			<keyword value="I/O"/>
		</info>
		<build type="header-file" subtype="api" value="common/services/gpio/gpio.h"/>
		<build type="header-file" value="common/services/gpio/xmega_ioport/xmega_gpio.h"/>
		<build type="include-path" value="common/services/gpio"/>
		<build type="doxygen-entry-point" value="gpio_group"/>
		<device-support value="xmegaa"/>
		<device-support value="xmegaau"/>
		<device-support value="xmegab"/>
		<device-support value="xmegad"/>
		<generator value="doxygen-module" default-mcu="unspecified-xmegaa1"/>
	</module>

	<module type="driver" id="xmega.drivers.cpu" caption="CPU specific features" basedir="./xmega/drivers/cpu" fromfile="./xmega/drivers/cpu/asf.xml">
		<info type="description" value="summary">
		Driver for CPU specific features. It provides functions for writing the CCP (Configuration Change Protection) register according to the timed sequence in the AVR XMEGA manual. Functions for getting the system reset cause and to do a soft reset of the microcontroller are also provided.
		</info>
		<info type="keyword" value="technology">
			<keyword value="CPU"/>
		</info>
		<build type="header-file" subtype="api" value="xmega/drivers/cpu/ccp.h"/>
		<build type="asm-source" value="xmega/drivers/cpu/ccp.s"/>
		<build type="header-file" subtype="api" value="xmega/drivers/cpu/xmega_reset_cause.h"/>
		<build type="include-path" value="xmega/drivers/cpu"/>
		<build type="doxygen-entry-point" value="ccp_group"/>
		<device-support value="xmegaa"/>
		<device-support value="xmegaau"/>
		<device-support value="xmegab"/>
		<device-support value="xmegad"/>
		<require idref="xmega.utils"/>
		<generator value="doxygen-module" default-mcu="unspecified-xmegaa1"/>
	</module>

	<select-by-config id="config.board.xmega_a1_xplained.led" name="config.board.xmega_a1_xplained.led" caption="XMEGA-A1 Xplained LED support" default="yes" basedir="./xmega/boards/xmega_a1_xplained" fromfile="./xmega/boards/xmega_a1_xplained/asf.xml">
		<module type="driver" id="config.board.xmega_a1_xplained.led#no" caption="XMEGA-A1 Xplained LED support disabled">
			<device-support value="xmega"/>
		</module>
		<module type="driver" id="config.board.xmega_a1_xplained.led#yes" caption="XMEGA-A1 Xplained LED support enabled">
			<build type="header-file" subtype="api" value="xmega/boards/xmega_a1_xplained/led.h"/>
			<build type="include-path" value="xmega/boards/xmega_a1_xplained"/>
			<require idref="common.services.basic.gpio"/>
			<require idref="xmega.drivers.ioport"/>
			<device-support value="xmega"/>
		</module>
	</select-by-config>
	<select-by-config id="config.board.xmega_a1_xplained.init" name="config.board.xmega_a1_xplained.init" caption="XMEGA-A1 Xplained initialization support" default="yes" basedir="./xmega/boards/xmega_a1_xplained" fromfile="./xmega/boards/xmega_a1_xplained/asf.xml">
		<module type="driver" id="config.board.xmega_a1_xplained.init#no" caption="XMEGA-A1 Xplained initialization support disabled">
			<device-support value="xmega"/>
		</module>
		<module type="driver" id="config.board.xmega_a1_xplained.init#yes" caption="XMEGA-A1 Xplained initialization support enabled">
			<build type="c-source" value="xmega/boards/xmega_a1_xplained/init.c"/>
			<require idref="common.services.basic.gpio"/>
			<require idref="xmega.drivers.ioport"/>
			<device-support value="xmega"/>
		</module>
	</select-by-config>
	<board id="board.xmega_a1_xplained" vendor="Atmel" caption="XMEGA-A1 Xplained" basedir="./xmega/boards/xmega_a1_xplained" fromfile="./xmega/boards/xmega_a1_xplained/asf.xml">
		<build type="define" name="BOARD" value="XMEGA_A1_XPLAINED"/>
		<build type="module-config" subtype="required-header-file" value="conf_board.h"/>
		<build type="header-file" value="xmega/boards/xmega_a1_xplained/xmega_a1_xplained.h"/>
		<build type="include-path" value="xmega/boards/xmega_a1_xplained"/>
		<build type="include-path" value="xmega/boards"/>
		<build type="linker-config" subtype="flags" value="--section-start=.BOOT=0x20000" toolchain="avrgcc"/>
		<require idref="config.board.xmega_a1_xplained.led"/>
		<require idref="config.board.xmega_a1_xplained.init"/>
		<device-support value="atxmega128a1"/>
	</board>

	<module type="service" id="common.services.basic.gpio" caption="GPIO - General purpose Input/Output" basedir="./common/services/gpio" fromfile="./common/services/gpio/asf.xml">
		<info type="description" value="summary">
			Driver for general purpose I/O pins. Provides functions for initializing IO pins as input or output, and for reading, or setting/clearing/toggling pins. Common API for UC3 and XMEGA.
			</info>
		<info type="keyword" value="technology">
			<keyword value="I/O"/>
		</info>
		<build type="header-file" subtype="api" value="common/services/gpio/gpio.h"/>
		<build type="header-file" value="common/services/gpio/xmega_ioport/xmega_gpio.h"/>
		<build type="include-path" value="common/services/gpio"/>
		<build type="doxygen-entry-point" value="gpio_group"/>
		<device-support value="xmegaa"/>
		<device-support value="xmegaau"/>
		<device-support value="xmegab"/>
		<device-support value="xmegad"/>
		<generator value="doxygen-module" default-mcu="unspecified-xmegaa1"/>
	</module>
	<module type="driver" id="xmega.drivers.ioport" caption="IOPORT - Input/Output Port Controller" basedir="./xmega/drivers/ioport" fromfile="./xmega/drivers/ioport/asf.xml">
		<info type="description" value="summary">
		Driver for controlling the I/O lines.
		Provides functions for configuring, reading and writing direction and level for the general purpose I/O lines.
		</info>
		<info type="keyword" value="technology">
			<keyword value="I/O"/>
		</info>
		<build type="c-source" value="xmega/drivers/ioport/ioport.c"/>
		<build type="header-file" subtype="api" value="xmega/drivers/ioport/ioport.h"/>
		<build type="include-path" value="xmega/drivers/ioport"/>
		<build type="doxygen-entry-point" value="port_driver_group"/>
		<device-support value="xmegaa"/>
		<device-support value="xmegaau"/>
		<device-support value="xmegab"/>
		<device-support value="xmegad"/>
		<require idref="xmega.utils"/>
		<generator value="doxygen-module" default-mcu="unspecified-xmegaa1"/>
	</module>

	<module type="driver" id="avr32.drivers.tc" caption="TC - Timer/Counter" basedir="./avr32/drivers/tc" fromfile="./avr32/drivers/tc/asf.xml">
		<info type="description" value="summary">
		Driver for the TC (Timer/Counter). The TC includes three identical 16-bit Timer/Counter channels. Each channel can be independently programmed to perform a wide range of functions including frequency measurement, event counting, interval measurement, pulse generation, delay timing and pulse width modulation.
		</info>
		<info type="keyword" value="technology">
			<keyword value="Timers"/>
		</info>
		<build type="c-source" value="avr32/drivers/tc/tc.c"/>
		<build type="header-file" subtype="api" value="avr32/drivers/tc/tc.h"/>
		<build type="include-path" value="avr32/drivers/tc"/>
		<build type="asm-source" value="avr32/drivers/tc/tc_asm.s"/>
		<build type="module-config" subtype="path" value="avr32/drivers/tc/module_config"/>
		<build type="linker-config" subtype="flags" value="--section-start=.BOOT=0x20000" toolchain="as5_8"/>
		<build type="module-config" subtype="required-header-file" value="conf_board.h"/>
		<build type="define" name="FOO" value="BAR"/>
		<build type="library" value="libavr51g1-4qt-k-0rs.a" subtype="user"/>
		<build type="library" value="libc.a" subtype="compiler"/>
		<build type="distribute" subtype="license" value="license.txt"/>
		<build type="distribute" subtype="file" value="a.file"/>
		<device-support value="uc3a"/>
	</module>

	<project caption="A caption" id="avr32.drivers.tc.example.a" basedir="./avr32/drivers/tc/example/a" fromfile="./avr32/drivers/tc/example/a/asf.xml" type="template">
		<require idref="avr32.drivers.tc.example"/>
		<require idref="board.stk600"/>
		<config name="config.spi_master_type" value="usart_spi"/>
		<generator value="as5_8"/>
		<device-support value="at32uc3a0128"/>
	</project>

	<module type="application" id="avr32.drivers.tc.example" caption="Long caption. Please truncate. Or else this test will fail. And that is bad." basedir="./avr32/drivers/tc/example" fromfile="./avr32/drivers/tc/example/asf.xml">
		<device-support value="uc3a"/>
		<info type="description" value="summary">
		Cute as a kitten.
		</info>
		<build type="linker-config" subtype="script" value="my.script"/>
		<require idref="avr32.drivers.tc"/>
	</module>

	<board id="board.stk600" caption="STK600">
		<device-support value="at32uc3a0128"/>
	</board>

</asf>
